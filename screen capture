import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.edge.service import Service
from selenium.webdriver.edge.options import Options
from PIL import Image
import pytesseract

# Configure the path to Tesseract OCR executable
pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'

# Edge driver setup
edge_options = Options()
edge_options.add_argument("--headless")  # Run in headless mode
service = Service('path/to/edgedriver')  # Update with the actual path to the Edge WebDriver
driver = webdriver.Edge(service=service, options=edge_options)

def capture_screenshot(input_combination, output_image_path):
    driver.get("https://www.silicon-edge.co.uk/j/index.php/resources/die-per-wafer")

    # Input the combinations
    for input_name, input_value in input_combination.items():
        input_field = driver.find_element(By.NAME, input_name)  # Find the input field by its name
        input_field.clear()
        input_field.send_keys(str(input_value))
    
    # Submit the form or trigger the calculation (if needed)
    submit_button = driver.find_element(By.XPATH, 'xpath_to_submit_button')  # Update this selector based on the site's submit button
    submit_button.click()

    # Wait for the result to load (adjust the sleep time as needed)
    time.sleep(3)

    # Capture the screenshot of the resulting image
    image_element = driver.find_element(By.XPATH, 'xpath_to_image')  # Update this selector based on the site's image element
    image_element.screenshot(output_image_path)

def extract_text_from_image(image_path):
    image = Image.open(image_path)
    text = pytesseract.image_to_string(image)
    return text

# Example combinations (replace with your actual combinations)
# Each dictionary represents a set of input values
combinations = [
    {"input_field_name1": "value1a", "input_field_name2": "value2a"},
    {"input_field_name1": "value1b", "input_field_name2": "value2b"},
    # Add more combinations as needed
]

# Process each combination
results = {}
for i, combination in enumerate(combinations):
    output_image_path = f"screenshots/combination_{i}.png"
    capture_screenshot(combination, output_image_path)
    extracted_text = extract_text_from_image(output_image_path)
    results[f"combination_{i}"] = extracted_text

# Print the results
for combination, text in results.items():
    print(f"Combination: {combination}, Extracted Text: {text}")

# Close the browser
driver.quit()
